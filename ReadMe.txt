Task 1 Основы Java
1.1 Написать сортировку пузырьком и бинарный поиск элемента в массиве.
1.2 Реализовать иерархию объектов Circle, Rect, Triangle, Square
1.3 Реализовать конвертеры температуры. Считаем, что значения будут поступать по шкале Цельсия, конвертеры должны преобразовывать значение в свою шкалу.

Task 2 Работа с коллекциями
2.1 Имеется список парка машин Car(String model, String type).
  Необходимо разбить его на списки сгруппированные по type.
  Пример исходного списка: Лада седан, Лада хэтчбек, Мерседес седан, Бмв кроссовер,  Форд хэтчбек, Пежо кроссовер, Тойота седан и т.п.
2.2 Имеется список парка машин Car(String model, String type). Необходимо разбить его на списки сгруппированные по type.
Исходные данные: текстовый файл со средней длиной строки равной 10 символам (файл или прошить текст в коде).
  2.2.1: Подсчитайте количество различных слов в файле.
  2.2.2: Выведите на экран список различных слов файла, отсортированный по возрастанию их длины (компаратор сначала по длине слова, потом по тексту).
  2.2.3: Подсчитайте и выведите на экран сколько раз каждое слово встречается в файле.
  2.2.4: Выведите на экран все строки файла в обратном порядке.
  2.2.5: Реализуйте свой Iterator для обхода списка в обратном порядке.
  2.2.6: Выведите на экран строки, номера которых задаются пользователем в произвольном порядке.

Task 3 Generics
3.1. Параметризовать CountMap и реализовать его
3.2. Параметризовать методы, используя правило PECS, и реализовать их

Task 4 Работа с Exceptions
4.1. Реализовать интерфейс Terminal, c помощью которого можно:
  проверить состояние счета; 
  cнять/положить деньги.
  4.1.1 Доступ к терминалу (терминал для одного счета) предоставляется только
    после ввода корректного пин-кода (4 цифры).
  4.1.2 При вводе нецифрового символа система должна выдать предупреждение,
    но при этом данное действие не считается критичной ошибкой ввода и
    состояние системы должно восстановиться к последнему корректному состоянию.
  4.1.3 При вводе 3 неправильных пин-кодов аккаунт блокируется на 10 сек
    (при попытке обратиться к нему в течение этого времени должно вызываться
    исключение AccountIsLockedException c информацией об оставшемся времени
    до снятия блокировки).
  4.1.4 Класть и снимать деньги можно только, если сумма кратна 100.
  4.1.5 Поскольку банкоматы, установленные на улице, сами «ничего не делают»
    с вашим счетом (они лишь делают проверку введенных данных и отправляют
    запросы на удаленный), то сервер (TerminalServer) может вызывать свои
    исключения, например, при недостатке средств на счете для совершения операции.
4.2 Реализуйте метод readContent(String url), который отображает на экран
    содержимое сайта, ссылка на который задаётся параметром url.
    Напишите программу, считывающую из консоли строку (URL ресурса) и вызывающую
    метод readContent. В том случае, если введённый URL неправильного формата
    или нет доступа до указанного ресурса, пользователю предлагается повторить ввод.

Task 5 Рефлексия, аннотации, прокси
5.1 Имплементировать интерфейс Calculator в классе CalculatorImpl
5.2 Вывести на консоль все методы класса, включая все родительские методы (включая приватные).
5.3 Вывести все геттеры класса.
5.4 Проверить что все String константы имеют значение = их имени public static final String MONDAY = "MONDAY".
5.5 Реализовать кэширующий прокси
5.6 Создать свою аннотацию Metric. Реализовать proxy класс PerformanceProxy,
    который в случае если метод аннотирован Metric будет выводить на консоль
    время выполнения метода.
5.7 Реализовать класс BeanUtils по документации